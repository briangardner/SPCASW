//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Linq.Expressions;


namespace SPCASW.Common
{
	public interface IViewModel<TEntity> where TEntity : EntityObject
	{
		void CopyModel(TEntity model);
		void UpdateModel(TEntity model);
	}

    #region ViewModels
    
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CampaignViewModel
    	: IViewModel<Campaign>
    {
        #region Primitive Properties
        
        [DataMemberAttribute()]
        public global::System.Int32 CampaignID { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String CampaignName { get; set; }
        
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy { get; set; }
        
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn { get; set; }

        #endregion
    
        #region Methods
        
        /// <summary>
        /// Updates the ViewModel from a model
        /// </summary>
        public void CopyModel(Campaign model)
        {
            CampaignID = model.CampaignID;
            CampaignName = model.CampaignName;
            CreatedBy = model.CreatedBy;
            CreatedOn = model.CreatedOn;
        }
        
        /// <summary>
        /// Updates the model from the ViewModel
        /// </summary>
        /// <param name="model">Model instance to update</param>
        public virtual void UpdateModel(Campaign model)
        {
            model.CampaignID = CampaignID;
            model.CampaignName = CampaignName;
            model.CreatedBy = CreatedBy;
            model.CreatedOn = CreatedOn;
        }
        /// <summary>
        /// This initializer enables projection of a model into a ViewModel with LINQ to Entities
        /// </summary>
        public static Expression<Func<Campaign, CampaignViewModel>> Initializer =
        	model => new CampaignViewModel()
        	{
                CampaignID = model.CampaignID,
                CampaignName = model.CampaignName,
                CreatedBy = model.CreatedBy,
                CreatedOn = model.CreatedOn
        	};

        #endregion
    }
    
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CampaignRecipientViewModel
    	: IViewModel<CampaignRecipient>
    {
        #region Primitive Properties
        
        [DataMemberAttribute()]
        public global::System.Int32 CampaignRecipientID { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Int32 CampaignID { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Int32 ContactID { get; set; }

        #endregion
    
        #region Methods
        
        /// <summary>
        /// Updates the ViewModel from a model
        /// </summary>
        public void CopyModel(CampaignRecipient model)
        {
            CampaignRecipientID = model.CampaignRecipientID;
            CampaignID = model.CampaignID;
            ContactID = model.ContactID;
        }
        
        /// <summary>
        /// Updates the model from the ViewModel
        /// </summary>
        /// <param name="model">Model instance to update</param>
        public virtual void UpdateModel(CampaignRecipient model)
        {
            model.CampaignRecipientID = CampaignRecipientID;
            model.CampaignID = CampaignID;
            model.ContactID = ContactID;
        }
        /// <summary>
        /// This initializer enables projection of a model into a ViewModel with LINQ to Entities
        /// </summary>
        public static Expression<Func<CampaignRecipient, CampaignRecipientViewModel>> Initializer =
        	model => new CampaignRecipientViewModel()
        	{
                CampaignRecipientID = model.CampaignRecipientID,
                CampaignID = model.CampaignID,
                ContactID = model.ContactID
        	};

        #endregion
    }
    
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactViewModel
    	: IViewModel<Contact>
    {
        #region Primitive Properties
        
        [DataMemberAttribute()]
        public global::System.Int32 ContactID { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String FirstName { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String LastName { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String EmailAddress { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsVolunteer { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsDonor { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsAdopter { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String City { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String StateCode { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PostalCode { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsEmailAllowed { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsMailAllowed { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsMailAddressValid { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PetPointID { get; set; }
        
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy { get; set; }
        
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String StreetAddress1 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String StreetAddress2 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String Phone1 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PhoneType1 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String Phone2 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PhoneType2 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String Phone3 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PhoneType3 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String Phone4 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PhoneType4 { get; set; }
        
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy { get; set; }
        
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String Notes { get; set; }

        #endregion
    
        #region Methods
        
        /// <summary>
        /// Updates the ViewModel from a model
        /// </summary>
        public void CopyModel(Contact model)
        {
            ContactID = model.ContactID;
            FirstName = model.FirstName;
            LastName = model.LastName;
            EmailAddress = model.EmailAddress;
            IsVolunteer = model.IsVolunteer;
            IsDonor = model.IsDonor;
            IsAdopter = model.IsAdopter;
            City = model.City;
            StateCode = model.StateCode;
            PostalCode = model.PostalCode;
            IsEmailAllowed = model.IsEmailAllowed;
            IsMailAllowed = model.IsMailAllowed;
            IsMailAddressValid = model.IsMailAddressValid;
            PetPointID = model.PetPointID;
            CreatedBy = model.CreatedBy;
            CreatedOn = model.CreatedOn;
            StreetAddress1 = model.StreetAddress1;
            StreetAddress2 = model.StreetAddress2;
            Phone1 = model.Phone1;
            PhoneType1 = model.PhoneType1;
            Phone2 = model.Phone2;
            PhoneType2 = model.PhoneType2;
            Phone3 = model.Phone3;
            PhoneType3 = model.PhoneType3;
            Phone4 = model.Phone4;
            PhoneType4 = model.PhoneType4;
            ModifiedBy = model.ModifiedBy;
            ModifiedOn = model.ModifiedOn;
            Notes = model.Notes;
        }
        
        /// <summary>
        /// Updates the model from the ViewModel
        /// </summary>
        /// <param name="model">Model instance to update</param>
        public virtual void UpdateModel(Contact model)
        {
            model.ContactID = ContactID;
            model.FirstName = FirstName;
            model.LastName = LastName;
            model.EmailAddress = EmailAddress;
            model.IsVolunteer = IsVolunteer;
            model.IsDonor = IsDonor;
            model.IsAdopter = IsAdopter;
            model.City = City;
            model.StateCode = StateCode;
            model.PostalCode = PostalCode;
            model.IsEmailAllowed = IsEmailAllowed;
            model.IsMailAllowed = IsMailAllowed;
            model.IsMailAddressValid = IsMailAddressValid;
            model.PetPointID = PetPointID;
            model.CreatedBy = CreatedBy;
            model.CreatedOn = CreatedOn;
            model.StreetAddress1 = StreetAddress1;
            model.StreetAddress2 = StreetAddress2;
            model.Phone1 = Phone1;
            model.PhoneType1 = PhoneType1;
            model.Phone2 = Phone2;
            model.PhoneType2 = PhoneType2;
            model.Phone3 = Phone3;
            model.PhoneType3 = PhoneType3;
            model.Phone4 = Phone4;
            model.PhoneType4 = PhoneType4;
            model.ModifiedBy = ModifiedBy;
            model.ModifiedOn = ModifiedOn;
            model.Notes = Notes;
        }
        /// <summary>
        /// This initializer enables projection of a model into a ViewModel with LINQ to Entities
        /// </summary>
        public static Expression<Func<Contact, ContactViewModel>> Initializer =
        	model => new ContactViewModel()
        	{
                ContactID = model.ContactID,
                FirstName = model.FirstName,
                LastName = model.LastName,
                EmailAddress = model.EmailAddress,
                IsVolunteer = model.IsVolunteer,
                IsDonor = model.IsDonor,
                IsAdopter = model.IsAdopter,
                City = model.City,
                StateCode = model.StateCode,
                PostalCode = model.PostalCode,
                IsEmailAllowed = model.IsEmailAllowed,
                IsMailAllowed = model.IsMailAllowed,
                IsMailAddressValid = model.IsMailAddressValid,
                PetPointID = model.PetPointID,
                CreatedBy = model.CreatedBy,
                CreatedOn = model.CreatedOn,
                StreetAddress1 = model.StreetAddress1,
                StreetAddress2 = model.StreetAddress2,
                Phone1 = model.Phone1,
                PhoneType1 = model.PhoneType1,
                Phone2 = model.Phone2,
                PhoneType2 = model.PhoneType2,
                Phone3 = model.Phone3,
                PhoneType3 = model.PhoneType3,
                Phone4 = model.Phone4,
                PhoneType4 = model.PhoneType4,
                ModifiedBy = model.ModifiedBy,
                ModifiedOn = model.ModifiedOn,
                Notes = model.Notes
        	};

        #endregion
    }
    
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contacts_tempViewModel
    	: IViewModel<Contacts_temp>
    {
        #region Primitive Properties
        
        [DataMemberAttribute()]
        public global::System.Int32 ContactID { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String FirstName { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String LastName { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String EmailAddress { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsVolunteer { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsDonor { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsAdopter { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String StreetAddress1 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String StreetAddress2 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String City { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String StateCode { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PostalCode { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String Phone1 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PhoneType1 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String Phone2 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PhoneType2 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String Phone3 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PhoneType3 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String Phone4 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PhoneType4 { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsEmailAllowed { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsMailAllowed { get; set; }
        
        [DataMemberAttribute()]
        public global::System.Boolean IsMailAddressValid { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String PetPointID { get; set; }
        
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy { get; set; }
        
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn { get; set; }
        
        [DataMemberAttribute()]
        public global::System.String Notes { get; set; }

        #endregion
    
        #region Methods
        
        /// <summary>
        /// Updates the ViewModel from a model
        /// </summary>
        public void CopyModel(Contacts_temp model)
        {
            ContactID = model.ContactID;
            FirstName = model.FirstName;
            LastName = model.LastName;
            EmailAddress = model.EmailAddress;
            IsVolunteer = model.IsVolunteer;
            IsDonor = model.IsDonor;
            IsAdopter = model.IsAdopter;
            StreetAddress1 = model.StreetAddress1;
            StreetAddress2 = model.StreetAddress2;
            City = model.City;
            StateCode = model.StateCode;
            PostalCode = model.PostalCode;
            Phone1 = model.Phone1;
            PhoneType1 = model.PhoneType1;
            Phone2 = model.Phone2;
            PhoneType2 = model.PhoneType2;
            Phone3 = model.Phone3;
            PhoneType3 = model.PhoneType3;
            Phone4 = model.Phone4;
            PhoneType4 = model.PhoneType4;
            IsEmailAllowed = model.IsEmailAllowed;
            IsMailAllowed = model.IsMailAllowed;
            IsMailAddressValid = model.IsMailAddressValid;
            PetPointID = model.PetPointID;
            CreatedBy = model.CreatedBy;
            CreatedOn = model.CreatedOn;
            Notes = model.Notes;
        }
        
        /// <summary>
        /// Updates the model from the ViewModel
        /// </summary>
        /// <param name="model">Model instance to update</param>
        public virtual void UpdateModel(Contacts_temp model)
        {
            model.ContactID = ContactID;
            model.FirstName = FirstName;
            model.LastName = LastName;
            model.EmailAddress = EmailAddress;
            model.IsVolunteer = IsVolunteer;
            model.IsDonor = IsDonor;
            model.IsAdopter = IsAdopter;
            model.StreetAddress1 = StreetAddress1;
            model.StreetAddress2 = StreetAddress2;
            model.City = City;
            model.StateCode = StateCode;
            model.PostalCode = PostalCode;
            model.Phone1 = Phone1;
            model.PhoneType1 = PhoneType1;
            model.Phone2 = Phone2;
            model.PhoneType2 = PhoneType2;
            model.Phone3 = Phone3;
            model.PhoneType3 = PhoneType3;
            model.Phone4 = Phone4;
            model.PhoneType4 = PhoneType4;
            model.IsEmailAllowed = IsEmailAllowed;
            model.IsMailAllowed = IsMailAllowed;
            model.IsMailAddressValid = IsMailAddressValid;
            model.PetPointID = PetPointID;
            model.CreatedBy = CreatedBy;
            model.CreatedOn = CreatedOn;
            model.Notes = Notes;
        }
        /// <summary>
        /// This initializer enables projection of a model into a ViewModel with LINQ to Entities
        /// </summary>
        public static Expression<Func<Contacts_temp, Contacts_tempViewModel>> Initializer =
        	model => new Contacts_tempViewModel()
        	{
                ContactID = model.ContactID,
                FirstName = model.FirstName,
                LastName = model.LastName,
                EmailAddress = model.EmailAddress,
                IsVolunteer = model.IsVolunteer,
                IsDonor = model.IsDonor,
                IsAdopter = model.IsAdopter,
                StreetAddress1 = model.StreetAddress1,
                StreetAddress2 = model.StreetAddress2,
                City = model.City,
                StateCode = model.StateCode,
                PostalCode = model.PostalCode,
                Phone1 = model.Phone1,
                PhoneType1 = model.PhoneType1,
                Phone2 = model.Phone2,
                PhoneType2 = model.PhoneType2,
                Phone3 = model.Phone3,
                PhoneType3 = model.PhoneType3,
                Phone4 = model.Phone4,
                PhoneType4 = model.PhoneType4,
                IsEmailAllowed = model.IsEmailAllowed,
                IsMailAllowed = model.IsMailAllowed,
                IsMailAddressValid = model.IsMailAddressValid,
                PetPointID = model.PetPointID,
                CreatedBy = model.CreatedBy,
                CreatedOn = model.CreatedOn,
                Notes = model.Notes
        	};

        #endregion
    }

    #endregion
}
